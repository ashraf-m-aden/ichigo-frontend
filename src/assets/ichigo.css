/* I used css grid layout, I could have set the width of the columns manually but then
the usage of flexbox would have been necessary. CSS grid layout is much simpler for this scenario*/


 /* when the screen is 600px or less */
@media only screen and (max-width: 600px) {

    .container {
        display: grid;
        grid-template-columns: repeat(2, 1fr);
        grid-gap: 10px;
        grid-auto-rows: minmax(100px, auto);
      }
      .block {
        color: white;
        display: flex;
        align-items: center;
        justify-content: center;
        cursor: pointer;
      }
      .b1 {
        grid-column: 1 / 3;
        grid-row: 1;
      
      }
      .b2 {
        grid-column: 1/3;
        grid-row: 3;
      
      }
      .b3 {
        grid-column: 1;
        grid-row: 2;
      
      }
      .b4 {
        grid-column: 2;
        grid-row: 2;
      
      }
      .b5 {
        grid-column: 1 ;
        grid-row: 4;
      
      }
      .b6 {
        grid-column: 1;
        grid-row: 5;
      
      }
      .b7 {
        grid-column: 1/3;
        grid-row: 3;
      
      }
      .b8 {
        grid-column: 2;
        grid-row: 4;
      
      }
      .b9 {
        grid-column: 2;
        grid-row: 5;
      
      }

}
 /* when the screen is larger than 600px, for this case we have two spaces at the right and left
 of the blocks, I just made them like that for esthetic purpose */

@media only screen and (min-width: 601px) {

    .container {
        display: grid;
        grid-template-columns: repeat(12, 1fr);
        grid-gap: 10px;
        grid-auto-rows: minmax(100px, auto);
      }
      .block {
        color: white;
        display: flex;
        align-items: center;
        justify-content: center;
        cursor: pointer;
      }
      .b1 {
        grid-column: 2 / 6;
        grid-row: 1 / 5;
      
      }
      .b2 {
        grid-column: 6 / 12;
        grid-row: 1 / 3;
      
      }
      .b3 {
        grid-column: 6 / 9;
        grid-row: 3 / 5;
      
      }
      .b4 {
        grid-column: 9 / 12;
        grid-row: 3 / 5;
      
      }
      .b5 {
        grid-column: 2 / 5 ;
        grid-row: 5;
      
      }
      .b6 {
        grid-column: 2 / 5;
        grid-row: 6/8;
      
      }
      .b7 {
        grid-column: 5 / 9;
        grid-row: 5 / 8;
      
      }
      .b8 {
        grid-column: 9 / 12;
        grid-row: 5 / 7;
      
      }
      .b9 {
        grid-column: 9 / 12;
        grid-row: 7;
      
      }
    
}